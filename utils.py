import re
import yt_dlp
import os
import json
def is_valid_youtube_url(url):
    youtube_regex = (
        r'(https?://)?(www\.)?'
        r'(youtube|youtu|youtube-nocookie)\.(com|be)/'
        r'(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})')
    return re.match(youtube_regex, url) is not None

def get_video_info(url):
    ydl_opts = {
        'cookiefile': 'cookies.txt'  # Use cookies from the cookies.txt file
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        return {
            "title": info.get("title"),
            "length": info.get("duration"),
            "author": info.get("uploader"),
            "views": info.get("view_count"),
            "thumbnail_url": info.get("thumbnail")
        }

def download_video(url):
    ydl_opts = {
        'format': 'best',
        'outtmpl': '%(title)s.%(ext)s',
        'cookiefile': 'cookies.txt'  # Use cookies from the cookies.txt file
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        result = ydl.download([url])
        return result

def create_cookies_file():
    """
    Creates a cookies.txt file using the COOKIES environment variable.
    The COOKIES environment variable must contain JSON-formatted data
    with full cookie attributes (name, value, domain, expiration, secure, etc.).
    """
    cookie_data = os.getenv("COOKIES")
    if cookie_data:
        try:
            # Parse the JSON string from the COOKIES environment variable
            cookies = json.loads(cookie_data)
            
            with open("cookies.txt", "w") as f:
                # Add the Netscape cookie file header
                f.write("# Netscape HTTP Cookie File\n")
                f.write("# This file was generated by the script.\n\n")
                
                for cookie in cookies:
                    # Extract cookie attributes
                    domain = cookie.get("domain", ".youtube.com")
                    flag = "TRUE" if domain.startswith(".") else "FALSE"
                    path = cookie.get("path", "/")
                    secure = "TRUE" if cookie.get("secure", False) else "FALSE"
                    expiration = cookie.get("expiration", "1893456000")  # Default if missing
                    name = cookie.get("name")
                    value = cookie.get("value")
                    
                    # Write the cookie in Netscape format
                    if name and value:
                        f.write(f"{domain}\t{flag}\t{path}\t{secure}\t{expiration}\t{name}\t{value}\n")
                    else:
                        print(f"Skipping invalid cookie: {cookie}")
                
            print("cookies.txt file created successfully!")
        except json.JSONDecodeError as e:
            print(f"Invalid JSON format in COOKIES environment variable: {e}")
    else:
        print("COOKIES environment variable is not set.")
